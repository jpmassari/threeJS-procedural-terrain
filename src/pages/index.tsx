import type { NextPage } from "next";
import React, { useEffect, useState } from 'react'
import Head from "next/head";
import * as THREE from 'three';

interface IWindowSize {
  width: number;
  height: number;
  pixelRatio: number;
}
const useWindowSize = () => {
  // Initialize state with undefined width/height so server and client renders match
  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/
  const [windowSize, setWindowSize] = useState<IWindowSize | undefined>(undefined);

  useEffect(() => {
    const handleResize = () => {
      // Set window width/height to state
      setWindowSize({
        width: window.innerWidth,
        height: window.innerHeight,
        pixelRatio: window.devicePixelRatio
      });
    }
    // Add event listener
    window.addEventListener("resize", handleResize);

    // Call handler right away so state gets updated with initial window size
    handleResize();

    // Remove event listener on cleanup
    return () => window.removeEventListener("resize", handleResize);
  }, [])
  return windowSize;
}

const Home: NextPage = () => {
  const size = useWindowSize() as IWindowSize;
  if(!size) return <></>;
  const scene = new THREE.Scene();
  const camera = new THREE.PerspectiveCamera(75, size.width / size.height, 0.1, 1000);
  const renderer = new THREE.WebGL1Renderer({
    canvas: document.querySelector('#bg') as HTMLCanvasElement,
  })
  renderer.setPixelRatio(size.pixelRatio);
  renderer.setSize(size.width , size.height);
  camera.position.setZ(30);
  renderer.render(scene, camera)
  const geometry = new THREE.TorusGeometry(10, 3, 16, 100);
  const material = new THREE.MeshBasicMaterial({ color: 0xFF6347, wireframe: true });
  const torus = new THREE.Mesh(geometry, material);

  scene.add(torus);
  function animate() {
    requestAnimationFrame(animate);
    renderer.render(scene, camera);
  }
  animate();
  return (
    <>
      <Head>
        <title>Three.js JP portifolio</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
    </>
  );
};

export default Home;
